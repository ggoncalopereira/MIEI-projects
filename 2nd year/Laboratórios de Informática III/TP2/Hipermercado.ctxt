#BlueJ class context
comment0.params=fich
comment0.target=Hipermercado\ leFicheiro(java.lang.String)
comment0.text=\r\n\ L\u00EA\ de\ um\ ficheiro\ fich\ um\ hipermercado\ gravado\ em\ bin\u00E1rio.\r\n
comment1.params=fich\ hp
comment1.target=void\ gravaFicheiro(java.lang.String,\ Hipermercado)
comment1.text=\r\n\ Grava\ um\ hipermercado\ para\ ficheiro\ fich\ em\ bin\u00E1rio.\r\n
comment10.params=fich
comment10.target=void\ readCatalogoProd(java.lang.String)
comment10.text=\r\n\ L\u00EA\ um\ cat\u00E1logo\ de\ Produtos,\ faz\ verifica\u00E7\u00E3o\ sint\u00E1tica\ dos\ produtos.\r\n
comment11.params=fich
comment11.target=void\ readVendasWithBuff(java.lang.String)
comment11.text=\r\n\ L\u00EA\ o\ ficheiro\ de\ vendas,\ linha\ a\ linha,\ faz\ o\ parse\ e\ adiciona\ a\ venda\ \u00E0s\ filiais\r\n\ e\ factura\u00E7\u00E3o.\r\n\ \r\n\ Coleciona\ informa\u00E7\u00F5es\ sobre\ o\ ficheiro\ para\ colocar\ no\ InfoFicheiro.\r\n
comment12.params=linha
comment12.target=Venda\ parseLinhaVenda(java.lang.String)
comment12.text=\r\n\ Efetua\ o\ parsing\ duma\ linha\ de\ vendas.\r\n
comment13.params=
comment13.target=java.util.Collection\ query1()
comment13.text=\r\n\ Lista\ ordenada\ alfabeticamente\ com\ os\ c\u00F3digos\ dos\ produtos\ nunca\ comprados\ e\ o\r\n\ seu\ respectivo\ total.\r\n
comment14.params=
comment14.target=java.util.Collection\ test()
comment15.params=produtos
comment15.target=java.util.Collection\ query6(int)
comment15.text=\r\n\ Determina\ o\ conjunto\ dos\ X\ produtos\ mais\ vendidos\ em\ todo\ o\ ano\ (em\ n\u00FAmero\ de\r\n\ unidades\ vendidas),\ indicando\ o\ n\u00FAmero\ total\ de\ distintos\ clientes\ que\ o\r\n\ compraram\ (X\ \u00E9\ um\ inteiro\ dado\ pelo\ utilizador).\r\n
comment16.params=
comment16.target=java.util.Collection\ query7()
comment16.text=\r\n\ Determina,\ para\ cada\ filial,\ a\ lista\ dos\ tr\u00EAs\ maiores\ compradores\ em\ termos\ de\r\n\ dinheiro\ facturado.\r\n
comment17.params=clientes
comment17.target=java.util.Collection\ query8(int)
comment17.text=\r\n\ Determina\ os\ c\u00F3digos\ dos\ X\ clientes\ (sendo\ X\ dado\ pelo\ utilizador)\ que\ compraram\r\n\ mais\ produtos\ diferentes\ (n\u00E3o\ interessa\ a\ quantidade\ nem\ o\ valor),\ indicando\r\n\ quantos,\ sendo\ o\ crit\u00E9rio\ de\ ordena\u00E7\u00E3o\ a\ ordem\ decrescente\ do\ n\u00FAmero\ de\r\n\ produtos.\r\n
comment18.params=produto\ clientes
comment18.target=java.util.Collection\ query9(java.lang.String,\ int)
comment18.text=\r\n\ Dado\ o\ c\u00F3digo\ de\ um\ produto\ que\ deve\ existir,\ determina\ o\ conjunto\ dos\ X\ clientes\r\n\ que\ mais\ o\ compraram\ e,\ para\ cada\ um,\ qual\ o\ valor\ gasto.\r\n
comment2.params=
comment2.target=Hipermercado()
comment2.text=\r\n\ Construtor\ da\ classe\ Hipermercado.\r\n
comment3.params=
comment3.target=boolean\ isEmpty()
comment3.text=\r\n\ Devolve\ um\ boolean\ que\ informa\ se\ o\ hipermercado\ tem\r\n\ informa\u00E7\u00F5es\ de\ factura\u00E7\u00E3o\ ou\ n\u00E3o.\r\n
comment4.params=
comment4.target=boolean\ haFicheiroAnterior()
comment5.params=
comment5.target=java.lang.String\ getInfo()
comment5.text=\r\n\ Devolve\ as\ informa\u00E7\u00F5es\ do\ \u00FAltimo\ ficheiro\ lido.\r\n
comment6.params=
comment6.target=java.lang.String\ getInfoF()
comment6.text=\r\n\ Devolve\ as\ informa\u00E7\u00F5es\ deste\ hipermercado\r\n
comment7.params=
comment7.target=void\ reset()
comment7.text=\r\n\ Reinicia\ o\ hipermercado\ completo,\ caso\ seja\ necess\u00E1rio\ reler\ todos\ os\ ficheiros.\r\n
comment8.params=
comment8.target=void\ resetVendas()
comment8.text=\r\n\ Reinicia\ as\ informa\u00E7\u00F5es\ relativas\ \u00E0s\ vendas,\ caso\ os\ cat\u00E1logos\ mudem.\r\n
comment9.params=fich
comment9.target=void\ readCatalogoCli(java.lang.String)
comment9.text=\r\n\ L\u00EA\ um\ cat\u00E1logo\ de\ Clientes,\ faz\ verifica\u00E7\u00E3o\ sint\u00E1tica\ dos\ clientes.\r\n
numComments=19
