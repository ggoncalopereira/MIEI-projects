#BlueJ class context
comment0.params=
comment0.target=HiperTeste()
comment0.text=\n\ Constructor\ for\ objects\ of\ class\ HiperTeste\n
comment1.params=fich
comment1.target=java.util.ArrayList\ readLinesWithBuff(java.lang.String)
comment10.params=vendas
comment10.target=long\ vendasPrecoZeroPlain(java.util.ArrayList)
comment11.params=vendas
comment11.target=long\ vendasIguaisF(java.util.ArrayList)
comment12.params=vendas
comment12.target=long\ vendasIguaisFExternal(java.util.ArrayList)
comment13.params=vendas
comment13.target=long\ vendasIguaisFor(java.util.ArrayList)
comment14.params=vendas\ letra
comment14.target=long\ totalProdutosLetraF(java.util.ArrayList,\ char)
comment15.params=vendas\ letra
comment15.target=long\ totalProdutosLetraFExternal(java.util.ArrayList,\ char)
comment16.params=vendas\ letra
comment16.target=long\ totalProdutosLetraFor(java.util.ArrayList,\ char)
comment17.params=vendas\ filial
comment17.target=java.util.HashSet\ ConjuntoClientesFilial1(java.util.ArrayList,\ int)
comment18.params=vendas\ filial
comment18.target=java.util.HashSet\ ConjuntoClientesFilial1External(java.util.ArrayList,\ int)
comment19.params=vendas\ filial
comment19.target=java.util.TreeSet\ ConjuntoClientesFilial2(java.util.ArrayList,\ int)
comment2.params=linha
comment2.target=Venda\ parseLinhaVenda(java.lang.String)
comment20.params=vendas\ filial
comment20.target=java.util.TreeSet\ ConjuntoClientesFilial2External(java.util.ArrayList,\ int)
comment21.params=vendas\ filial
comment21.target=java.util.TreeSet\ ConjuntoClientesFilial3(java.util.ArrayList,\ int)
comment22.params=vendas\ filial
comment22.target=java.util.TreeSet\ ConjuntoClientesFilial3External(java.util.ArrayList,\ int)
comment23.params=args
comment23.target=void\ main(java.lang.String[])
comment3.params=linhas
comment3.target=java.util.ArrayList\ parseAllLinhas(java.util.ArrayList)
comment4.params=vendas\ filial
comment4.target=long\ totalComprasFilialF(java.util.ArrayList,\ int)
comment4.text=public\ static\ ArrayList<Venda>\ parseAllLinhasExternal(ArrayList<String>\ linhas)\ {\n\ \ \ \ \ \ \ \ ArrayList<Venda>\ v\ \=\ new\ ArrayList<Venda>();\n\ \ \ \ \ \ \ \ Iterator<String>\ it\ \=\ linhas.iterator();\n\ \ \ \ \ \ \ \ String\ venda;\n\ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ while\ (it.hasNext()){\n\ \ \ \ \ \ \ \ \ \ \ \ venda\ \=\ it.next();\n\ \ \ \ \ \ \ \ \ \ \ \ if(parseLinhaVenda(venda)\ \!\=\ null)\ v.add(parseLinhaVenda(venda));\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ return\ v;\n\ \ \ \ }\n\ \ \ \ \n\ \ \ \ --------------is\ this\ needed,\ external-iterator\ wise?\ acho\ que\ n\u00E3o\ \u00E9\ preciso,\ porque\ parsing\ \u00E9\ parsing,\ mas\ w/e\n\ \ \ \ \n
comment5.params=vendas\ filial
comment5.target=long\ totalComprasFilialFExternal(java.util.ArrayList,\ int)
comment6.params=vendas\ filial
comment6.target=long\ totalComprasFilialFor(java.util.ArrayList,\ int)
comment7.params=vendas
comment7.target=long\ vendasPrecoZeroF(java.util.ArrayList)
comment8.params=vendas
comment8.target=long\ vendasPrecoZeroFExternal(java.util.ArrayList)
comment9.params=vendas
comment9.target=long\ vendasPrecoZeroFor(java.util.ArrayList)
numComments=24
