<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Main</title><link href="ocean.css" rel="stylesheet" type="text/css" title="Ocean" /><script src="haddock-util.js" type="text/javascript"></script><script type="text/javascript">//<![CDATA[
window.onload = function () {pageLoad();setSynopsis("mini_Main.html");};
//]]>
</script></head><body><div id="package-header"><ul class="links" id="page-menu"><li><a href="index.html">Contents</a></li><li><a href="doc-index.html">Index</a></li></ul><p class="caption empty">&nbsp;</p></div><div id="content"><div id="module-header"><table class="info"><tr><th>Safe Haskell</th><td>Safe-Inferred</td></tr></table><p class="caption">Main</p></div><div id="description"><p class="caption">Description</p><div class="doc"><p>Este &#233; um m&#243;dulo definido para resolu&#231;&#227;o dos tabuleiros propostos
na Tarefa1, relativa ao jogo de tabuleiro <a href="Sokoban.html">Sokoban</a>, no &#226;mbito
da disciplina de Laborat&#243;rios de Inform&#225;tica I. Esta p&#225;gina
servir&#225; de documenta&#231;&#227;o do c&#243;digo para tal tarefa.
</p></div></div><div id="synopsis"><p id="control.syn" class="caption expander" onclick="toggleSection('syn')">Synopsis</p><ul id="section.syn" class="hide" onclick="toggleSection('syn')"><li class="src short"><a href="#v:outStr">outStr</a> :: [String] -&gt; String</li><li class="src short"><a href="#v:main">main</a> :: IO ()</li><li class="src short"><a href="#v:tarefa1">tarefa1</a> :: [String] -&gt; [String]</li><li class="src short"><a href="#v:verificaTudo">verificaTudo</a> :: String -&gt; [String]</li><li class="src short"><a href="#v:filtraTab">filtraTab</a> :: String -&gt; String</li><li class="src short"><a href="#v:filtraCoord">filtraCoord</a> :: String -&gt; String</li><li class="src short"><a href="#v:converte">converte</a> :: String -&gt; (Int, Int)</li><li class="src short"><a href="#v:converteTudo">converteTudo</a> :: [String] -&gt; [(Int, Int)]</li><li class="src short"><a href="#v:checkChar">checkChar</a> :: [String] -&gt; (Int, Int) -&gt; Char -&gt; Bool</li><li class="src short"><a href="#v:validaDimensao">validaDimensao</a> :: [String] -&gt; Int -&gt; Int</li><li class="src short"><a href="#v:validaPosicao">validaPosicao</a> :: [String] -&gt; [String] -&gt; Int</li><li class="src short"><a href="#v:checkSpot">checkSpot</a> :: [String] -&gt; (Int, Int) -&gt; Bool</li><li class="src short"><a href="#v:checkTab">checkTab</a> :: [String] -&gt; (Int, Int) -&gt; Int</li><li class="src short"><a href="#v:checkCardList">checkCardList</a> :: [String] -&gt; (Int, Int) -&gt; [(Int, Int)]</li><li class="src short"><a href="#v:checkDotList">checkDotList</a> :: [String] -&gt; (Int, Int) -&gt; [(Int, Int)]</li><li class="src short"><a href="#v:compareBoxDots">compareBoxDots</a> :: [String] -&gt; [(Int, Int)] -&gt; Int</li><li class="src short"><a href="#v:noRepetitions">noRepetitions</a> :: [String] -&gt; Int -&gt; Int</li><li class="src short"><a href="#v:outOfBounds">outOfBounds</a> :: [String] -&gt; [(Int, Int)] -&gt; Int -&gt; Int</li></ul></div><div id="interface"><h1>Documentation</h1><div class="top"><p class="src"><a name="v:outStr" class="def">outStr</a> :: [String] -&gt; String</p><div class="doc"><p>A fun&#231;&#227;o outStr &#233; uma fun&#231;&#227;o pr&#233;-definida nas aulas para efectuar um <a href="unlines.html">unlines</a> de forma mais eficaz.
</p></div></div><div class="top"><p class="src"><a name="v:main" class="def">main</a> :: IO ()</p></div><div class="top"><p class="src"><a name="v:tarefa1" class="def">tarefa1</a> :: [String] -&gt; [String]</p><div class="doc"><p>A fun&#231;&#227;o <code><a href="Main.html#v:tarefa1">tarefa1</a></code> ser&#225; respons&#225;vel por receber o input sob forma de lista de strings, no qual estar&#227;o inclu&#237;dos o tabuleiro, posi&#231;&#227;o e coordenadas de caixas.
</p></div></div><div class="top"><p class="src"><a name="v:verificaTudo" class="def">verificaTudo</a> :: String -&gt; [String]</p><div class="doc"><p>A fun&#231;&#227;o <code><a href="Main.html#v:verificaTudo">verificaTudo</a></code> &#233; o <a href="c&#233;rebro.html">c&#233;rebro</a> de todo este programa. Esta fun&#231;&#227;o receber&#225; o mesmo tabuleiro que na fun&#231;&#227;o tarefa1, apenas com a diferen&#231;a de estar sob forma de string, e, atrav&#233;s de m&#250;ltiplas opera&#231;&#245;es via fun&#231;&#245;es auxiliares, verificar&#225; todos os casos consoante a validade dos mesmos.
</p></div></div><div class="top"><p class="src"><a name="v:filtraTab" class="def">filtraTab</a> :: String -&gt; String</p><div class="doc"><p>A fun&#231;&#227;o <code><a href="Main.html#v:filtraTab">filtraTab</a></code> filtrar&#225; o tabuleiro no input inicial, e devolver&#225; o mesmo input at&#233; ao ponto em que encontra um d&#237;gito.
</p></div></div><div class="top"><p class="src"><a name="v:filtraCoord" class="def">filtraCoord</a> :: String -&gt; String</p><div class="doc"><p>A fun&#231;&#227;o <code><a href="Main.html#v:filtraCoord">filtraCoord</a></code> efectuar&#225; o inverso da fun&#231;&#227;o <code><a href="Main.html#v:filtraTab">filtraTab</a></code>; esta devolver&#225; o input restante que teria sido filtrado em <code><a href="Main.html#v:filtraTab">filtraTab</a></code>.
</p></div></div><div class="top"><p class="src"><a name="v:converte" class="def">converte</a> :: String -&gt; (Int, Int)</p><div class="doc"><p>A fun&#231;&#227;o <code><a href="Main.html#v:converte">converte</a></code> servir&#225; para posterior convers&#227;o da posi&#231;&#227;o (o primeiro elemento de <code><a href="Main.html#v:filtraCoord">filtraCoord</a></code>) para um par de inteiros, com respectivas coordenadas no eixo do x e no eixo do y.
</p><pre class="screen"><code class="prompt">&gt;&gt;&gt; </code><strong class="userinput"><code>converte &quot;2 3&quot;
</code></strong>(2,3)
</pre></div></div><div class="top"><p class="src"><a name="v:converteTudo" class="def">converteTudo</a> :: [String] -&gt; [(Int, Int)]</p><div class="doc"><p>A fun&#231;&#227;o <code><a href="Main.html#v:converteTudo">converteTudo</a></code> efectuar&#225; o mesmo que a fun&#231;&#227;o <code><a href="Main.html#v:converte">converte</a></code>, excepto que para listas de strings, de tal modo que devolver&#225; uma lista de pares de inteiros.
</p></div></div><div class="top"><p class="src"><a name="v:checkChar" class="def">checkChar</a> :: [String] -&gt; (Int, Int) -&gt; Char -&gt; Bool</p><div class="doc"><p>A fun&#231;&#227;o <code><a href="Main.html#v:checkChar">checkChar</a></code> receber&#225; um tabuleiro e um par de coordenadas, assim como um caracter, para verificar a exist&#234;ncia de esse caracter no tabuleiro.
</p><pre class="screen"><code class="prompt">&gt;&gt;&gt; </code><strong class="userinput"><code>checkChar [&quot;abcd&quot;] (0,0) 'a'
</code></strong>True
</pre></div></div><div class="top"><p class="src"><a name="v:validaDimensao" class="def">validaDimensao</a> :: [String] -&gt; Int -&gt; Int</p><div class="doc"><p>A fun&#231;&#227;o <code><a href="Main.html#v:validaDimensao">validaDimensao</a></code> apenas verificar&#225; se as dimens&#245;es do tabuleiro s&#227;o v&#225;lidas, a partir da compara&#231;&#227;o do tamanho de cada uma das linhas. Caso n&#227;o seja, devolver&#225; o n&#250;mero da linha cujo comprimento diferente da anterior.
</p></div></div><div class="top"><p class="src"><a name="v:validaPosicao" class="def">validaPosicao</a> :: [String] -&gt; [String] -&gt; Int</p><div class="doc"><p>A fun&#231;&#227;o <code><a href="Main.html#v:validaPosicao">validaPosicao</a></code> averiguar&#225; se a posi&#231;&#227;o recebida est&#225; dentro das dimens&#245;es estipuladas do tabuleiro, assim como analisar&#225; se esta n&#227;o se encontra em cima de uma parede (#).
</p></div></div><div class="top"><p class="src"><a name="v:checkSpot" class="def">checkSpot</a> :: [String] -&gt; (Int, Int) -&gt; Bool</p><div class="doc"><p>A fun&#231;&#227;o <code><a href="Main.html#v:checkSpot">checkSpot</a></code> funcionar&#225; em conjunto com uma outra fun&#231;&#227;o, de modo a confirmar se o tabuleiro &#233; apenas composto por cardinais, pontos e espa&#231;os. Caso n&#227;o seja, devolve False.
</p></div></div><div class="top"><p class="src"><a name="v:checkTab" class="def">checkTab</a> :: [String] -&gt; (Int, Int) -&gt; Int</p><div class="doc"><p>Atrav&#233;s da fun&#231;&#227;o <code><a href="Main.html#v:checkSpot">checkSpot</a></code>, a fun&#231;&#227;o <code><a href="Main.html#v:checkTab">checkTab</a></code> partir&#225; atrav&#233;s do valor obtido pela fun&#231;&#227;o <code><a href="Main.html#v:checkSpot">checkSpot</a></code> para averiguar se o caracter em que se encontra &#233; um caracter v&#225;lido. Caso este n&#227;o seja, a fun&#231;&#227;o devolver&#225; a linha em que essa condi&#231;&#227;o n&#227;o se verifique
</p></div></div><div class="top"><p class="src"><a name="v:checkCardList" class="def">checkCardList</a> :: [String] -&gt; (Int, Int) -&gt; [(Int, Int)]</p><div class="doc"><p>A fun&#231;&#227;o <code><a href="Main.html#v:checkCardList">checkCardList</a></code> efectuar&#225; uma simples opera&#231;&#227;o: a compila&#231;&#227;o sob forma de lista de todos os cardinais existentes no tabuleiro, para uma posterior compara&#231;&#227;o.
</p></div></div><div class="top"><p class="src"><a name="v:checkDotList" class="def">checkDotList</a> :: [String] -&gt; (Int, Int) -&gt; [(Int, Int)]</p><div class="doc"><p>A fun&#231;&#227;o <code><a href="Main.html#v:checkDotList">checkDotList</a></code> funcionar&#225; do mesmo modo que a fun&#231;&#227;o <code><a href="Main.html#v:checkCardList">checkCardList</a></code>, com a diferen&#231;a de compilar uma lista de todos os pontos existentes no tabuleiro.}
</p></div></div><div class="top"><p class="src"><a name="v:compareBoxDots" class="def">compareBoxDots</a> :: [String] -&gt; [(Int, Int)] -&gt; Int</p><div class="doc"><p>A fun&#231;&#227;o <code><a href="Main.html#v:compareBoxDots">compareBoxDots</a></code> servir&#225; para compara&#231;&#227;o entre o n&#250;mero de caixas e o n&#250;mero de pontos. Como, para que um tabuleiro seja v&#225;lido, o n&#250;mero de caixas ter&#225; de ser igual ao n&#250;mero de pontos existentes, esta fun&#231;&#227;o, atrav&#233;s da lista compilada pela fun&#231;&#227;o <code><a href="Main.html#v:checkDotList">checkDotList</a></code>, comparar&#225; o n&#250;mero de caixas com o n&#250;mero de pontos.
</p></div></div><div class="top"><p class="src"><a name="v:noRepetitions" class="def">noRepetitions</a> :: [String] -&gt; Int -&gt; Int</p><div class="doc"><p>A fun&#231;&#227;o <code><a href="Main.html#v:noRepetitions">noRepetitions</a></code> verificar&#225; se n&#227;o h&#225; uma repeti&#231;&#227;o de caixas, isto &#233;, n&#227;o poder&#227;o estar duas caixas na mesma posi&#231;&#227;o. Caso existam duas caixas sob essa condi&#231;&#227;o, ser&#225; devolvida a linha da caixa que se est&#225; a tentar sobrepor.
</p></div></div><div class="top"><p class="src"><a name="v:outOfBounds" class="def">outOfBounds</a> :: [String] -&gt; [(Int, Int)] -&gt; Int -&gt; Int</p><div class="doc"><p>A fun&#231;&#227;o <code><a href="Main.html#v:outOfBounds">outOfBounds</a></code> apenas comparar&#225; a posi&#231;&#227;o das caixas com as dimens&#245;es do tabuleiro, isto &#233;, as caixas n&#227;o podem estar fora das dimens&#245;es do tabuleiro. Devolve a linha em que tal n&#227;o se verifique.
</p></div></div></div></div><div id="footer"><p>Produced by <a href="http://www.haskell.org/haddock/">Haddock</a> version 2.13.2</p></div></body></html>